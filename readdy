import React, { useState } from "react";
import {
  Container,
  TextField,
  Checkbox,
  FormControlLabel,
  Button,
  Typography,
  Grid,
  Paper,
  CircularProgress,
  ThemeProvider,
  createTheme,
} from "@mui/material";
import { makeStyles } from "@mui/styles";
import "@fortawesome/fontawesome-free/css/all.min.css";

// Create a custom theme
const theme = createTheme();

const useStyles = makeStyles((theme) => ({
  root: {
    minHeight: "100vh",
    position: "relative",
    overflow: "hidden",
    background: "linear-gradient(to bottom right, #1a1a1a, #000000)",
  },
  background: {
    position: "absolute",
    top: 0,
    left: 0,
    width: "100%",
    height: "100%",
    zIndex: 0,
    "& img": {
      width: "100%",
      height: "100%",
      objectFit: "cover",
    },
    "&:after": {
      content: '""',
      position: "absolute",
      top: 0,
      left: 0,
      width: "100%",
      height: "100%",
      background: "rgba(0, 0, 0, 0.5)",
    },
  },
  lightningContainer: {
    position: "absolute",
    width: "100%",
    height: "100%",
  },
  lightning: {
    position: "absolute",
    background:
      "linear-gradient(to bottom, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 40%, rgba(255,255,255,1) 60%, rgba(255,255,255,0) 100%)",
    width: "3px",
    height: "200px",
    transform: "rotate(45deg)",
    filter: "blur(1px)",
  },
  airplaneContainer: {
    position: "absolute",
    width: "100%",
    height: "100%",
    animation: "$fly 12s linear infinite",
  },
  airplaneContainerBottom: {
    position: "absolute",
    width: "100%",
    height: "100%",
    animation: "$flyBottom 15s linear infinite",
    animationDelay: "6s",
  },
  airplane: {
    position: "relative",
    width: "50px",
    height: "50px",
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    filter: "drop-shadow(0 0 10px rgba(0, 150, 255, 0.4))",
  },
  engineGlow: {
    position: "absolute",
    left: "-15px",
    width: "40px",
    height: "40px",
    background:
      "radial-gradient(circle at right, rgba(0,150,255,0.6), transparent 70%)",
    filter: "blur(8px)",
    animation: "$glow 0.8s ease-in-out infinite",
    zIndex: -1,
  },
  "@keyframes fly": {
    "0%": {
      left: "-20%",
      top: "40%",
      transform: "rotate(-12deg) scale(1)",
    },
    "50%": {
      transform: "rotate(-8deg) scale(1.05)",
    },
    "100%": {
      left: "120%",
      top: "20%",
      transform: "rotate(-15deg) scale(1)",
    },
  },
  "@keyframes flyBottom": {
    "0%": {
      left: "-20%",
      top: "70%",
      transform: "rotate(-8deg) scale(1)",
    },
    "50%": {
      transform: "rotate(-5deg) scale(1.05)",
    },
    "100%": {
      left: "120%",
      top: "60%",
      transform: "rotate(-10deg) scale(1)",
    },
  },
  "@keyframes lightning": {
    "0%": { opacity: 0 },
    "10%": { opacity: 1 },
    "20%": { opacity: 0 },
    "30%": { opacity: 1 },
    "40%": { opacity: 0 },
    "100%": { opacity: 0 },
  },

  "@keyframes glow": {
    "0%, 100%": {
      opacity: 0.3,
      transform: "translateY(-50%) scale(1)",
      background:
        "radial-gradient(circle at right, rgba(0,150,255,0.6), rgba(0,100,255,0.4), transparent 70%)",
      boxShadow:
        "0 0 20px rgba(0, 150, 255, 0.6), 0 0 40px rgba(0, 150, 255, 0.4), 0 0 60px rgba(0, 150, 255, 0.3)",
    },
    "50%": {
      opacity: 0.9,
      transform: "translateY(-50%) scale(1.6)",
      background:
        "radial-gradient(circle at right, rgba(0,200,255,0.8), rgba(0,150,255,0.6), transparent 70%)",
      boxShadow:
        "0 0 30px rgba(0, 200, 255, 0.8), 0 0 60px rgba(0, 200, 255, 0.6), 0 0 90px rgba(0, 200, 255, 0.4)",
    },
  },
  content: {
    position: "relative",
    zIndex: 1,
    minHeight: "100vh",
    display: "flex",
    flexDirection: "column",
    alignItems: "center",
    justifyContent: "center",
    // padding: theme.spacing(4), // Now theme.spacing will work
  },
  form: {
    width: "100%",
    maxWidth: "400px",
    backdropFilter: "blur(10px)",
    backgroundColor: "rgba(255, 255, 255, 0.1)",
    borderRadius: "12px",
    // padding: theme.spacing(4),
    boxShadow: "0 8px 32px rgba(0, 0, 0, 0.1)",
  },
  input: {
    backgroundColor: "rgba(255, 255, 255, 0.2)",
    borderRadius: "8px",
    "& .MuiInputBase-input": {
      color: "#ffffff",
    },
    "& .MuiInputLabel-root": {
      color: "#ffffff",
    },
    "& .MuiOutlinedInput-root": {
      "& fieldset": {
        borderColor: "rgba(255, 255, 255, 0.3)",
      },
      "&:hover fieldset": {
        borderColor: "rgba(255, 255, 255, 0.5)",
      },
      "&.Mui-focused fieldset": {
        borderColor: "#2196f3",
      },
    },
  },
  button: {
    background: "linear-gradient(to right, #2196f3, #21cbf3)",
    color: "#ffffff",
    borderRadius: "8px",
    // padding: theme.spacing(1.5),
    fontWeight: "bold",
    "&:hover": {
      background: "linear-gradient(to right, #1e88e5, #1de9b6)",
    },
  },
}));

const App = () => {
  const classes = useStyles();
  const [username, setUsername] = useState("");
  const [password, setPassword] = useState("");
  const [rememberMe, setRememberMe] = useState(false);
  const [isLoading, setIsLoading] = useState(false);
  const [showError, setShowError] = useState(false);

  const handleLogin = (e) => {
    e.preventDefault();
    setIsLoading(true);
    setTimeout(() => {
      if (username && password) {
        setShowError(false);
      } else {
        setShowError(true);
      }
      setIsLoading(false);
    }, 1500);
  };

  return (
    <ThemeProvider theme={theme}>
      <div className={classes.root}>
        {/* Background Image */}
        <div className={classes.background}>
          <img
            src="https://public.readdy.ai/ai/img_res/9dddc900c5c7b74da141ee3c54fce935.jpg"
            alt="Storm background"
          />
        </div>

        {/* Lightning Effects */}
        <div className={classes.lightningContainer}>
          <div
            className={classes.lightning}
            style={{
              top: "20%",
              left: "30%",
              animation: "lightning 3s infinite",
            }}
          />
          <div
            className={classes.lightning}
            style={{
              top: "40%",
              left: "60%",
              animation: "lightning 3s infinite 1s",
            }}
          />
          <div
            className={classes.lightning}
            style={{
              top: "30%",
              left: "45%",
              animation: "lightning 3s infinite 2s",
            }}
          />
        </div>

        {/* Airplane Animations */}
        <div className={classes.airplaneContainer}>
          <div className={classes.airplane}>
            <i
              className="fas fa-plane"
              style={{ color: "#0d47a1", fontSize: "48px", opacity: 0.8 }}
            />
            <div className={classes.engineGlow} />
          </div>
        </div>
        <div className={classes.airplaneContainerBottom}>
          <div className={classes.airplane}>
            <i
              className="fas fa-plane"
              style={{ color: "#0d47a1", fontSize: "48px", opacity: 0.8 }}
            />
            <div className={classes.engineGlow} />
          </div>
        </div>

        {/* Main Content */}
        <Container className={classes.content}>
          {/* Header */}
          <Typography
            variant="h3"
            align="center"
            gutterBottom
            style={{ color: "#ffffff", fontWeight: "bold" }}
          >
            Aviation Assessment Platform
          </Typography>
          <Typography
            variant="subtitle1"
            align="center"
            style={{ color: "#b0bec5" }}
          >
            Elevate Your Aviation Career
          </Typography>

          {/* Login Form */}
          <Paper className={classes.form}>
            <form onSubmit={handleLogin}>
              <Grid container spacing={3}>
                <Grid item xs={12}>
                  <TextField
                    fullWidth
                    label="Username"
                    variant="outlined"
                    className={classes.input}
                    value={username}
                    onChange={(e) => setUsername(e.target.value)}
                  />
                </Grid>
                <Grid item xs={12}>
                  <TextField
                    fullWidth
                    label="Password"
                    type="password"
                    variant="outlined"
                    className={classes.input}
                    value={password}
                    onChange={(e) => setPassword(e.target.value)}
                  />
                </Grid>
                <Grid item xs={12}>
                  <FormControlLabel
                    control={
                      <Checkbox
                        checked={rememberMe}
                        onChange={(e) => setRememberMe(e.target.checked)}
                      />
                    }
                    label="Remember me"
                    style={{ color: "#ffffff" }}
                  />
                </Grid>
                <Grid item xs={12}>
                  <Button
                    fullWidth
                    type="submit"
                    variant="contained"
                    className={classes.button}
                    disabled={isLoading}
                  >
                    {isLoading ? <CircularProgress size={24} /> : "Sign In"}
                  </Button>
                </Grid>
                {showError && (
                  <Grid item xs={12}>
                    <Typography align="center" style={{ color: "#ff6b6b" }}>
                      Please enter valid credentials
                    </Typography>
                  </Grid>
                )}
              </Grid>
            </form>
          </Paper>

          {/* Footer */}
          <Typography
            variant="body2"
            align="center"
            style={{ color: "#b0bec5", marginTop: "24px" }}
          >
            &copy; 2025 Aviation Assessment Platform. All rights reserved.
          </Typography>
          <Grid
            container
            justifyContent="center"
            spacing={2}
            style={{ marginTop: "8px" }}
          >
            <Grid item>
              <Button style={{ color: "#b0bec5" }}>Terms of Service</Button>
            </Grid>
            <Grid item>
              <Button style={{ color: "#b0bec5" }}>Privacy Policy</Button>
            </Grid>
            <Grid item>
              <Button style={{ color: "#b0bec5" }}>Support</Button>
            </Grid>
          </Grid>
        </Container>
      </div>
    </ThemeProvider>
  );
};

export default App;
